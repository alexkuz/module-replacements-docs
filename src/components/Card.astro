---
import { type ModuleReplacement } from 'module-replacements';
interface Props {
	replacement: ModuleReplacement;
}

const { replacement } = Astro.props;

let title = replacement.moduleName;
let npmUrl = 'https://www.npmjs.com/package/' + replacement.moduleName;
let description = '';
let mdnUrl = '';
let docPath = '';

switch (replacement.type) {
case 'native':
	description = replacement.replacement;
	mdnUrl = 'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/' + replacement.mdnPath;
	break;
case 'simple':
	description = replacement.replacement;
	break;
case 'documented':
	docPath = replacement.docPath;
}
---

{docPath
	? <li class="replacement-card"}>
		<div class="preview">
			<h3><a href={npmUrl}>{title}</a></h3>
			<button class="show-btn" data-docpath={docPath} type="button">Show</button>
		</div>
	</li>
	: <li class="replacement-card"}>
		<h3><a href={npmUrl}>{title}</a></h3>
		{description ? <p>{description}</p> : null}
		{mdnUrl ? <small>(<a href={mdnUrl}>MDN</a>)</small> : null}
	</li>
}

<style>
.replacement-card {
	list-style-type: none;
	border: 1px solid color-mix(in srgb, var(--text-main) 15%, transparent);
	border-radius: 10px;
	padding: 10px;
	background: rgba(0 0 0 / 10%);
}

.replacement-card h3 {
	margin: 0;
}

.replacement-card h3 a {
	color: inherit;
}

.replacement-card h3 a:hover {
	text-decoration: underline;
}

.preview {
	display: flex;
	gap: 20px;
	align-items: center;
	justify-content: space-between;
}

.show-btn {
	margin: 0;
}

</style>

<style is:global>
.md h3:first-of-type {
	margin-top: 8px;
}
</style>

<script>
	import snarkdown from 'snarkdown';

	document.querySelectorAll('.show-btn').forEach(btn => {
		btn.addEventListener('click', () => {
			let docPath = btn.getAttribute('data-docpath');
			let docUrl = `https://raw.githubusercontent.com/es-tooling/module-replacements/main/docs/modules/${docPath}.md`;

			fetch(docUrl)
				.then(response => response.text())
				.then(text => {
					let html = snarkdown(text)
						.replace(/<h1/g, '<h3')
						.replace(/<\/h1>/g, '</h3>')
						.replace(/<h2/g, '<h4')
						.replace(/<\/h2>/g, '</h4>');

					if (btn.parentNode instanceof HTMLElement) btn.parentNode.innerHTML = '<div class="md">' + html + '</div>';
				});
		});
	});
</script>